<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cloud.gds.cleaning.mapper.DataFieldValueMapper">

	<!-- 可根据自己的需求，是否要使用 -->
	<resultMap id="dataFieldValueMap" type="com.cloud.gds.cleaning.api.entity.DataFieldValue">
		<result column="id" property="id"/>
		<result column="field_id" property="fieldId"/>
		<result column="field_value" property="fieldValue"/>
		<result column="create_time" property="createTime"/>
		<result column="modified_time" property="modifiedTime"/>
		<result column="create_user" property="createUser"/>
		<result column="modified_user" property="modifiedUser"/>
		<result column="is_deleted" property="isDeleted"/>
		<result column="state" property="state"/>
		<result column="be_cleaned_id" property="beCleanedId"/>
	</resultMap>

	<resultMap id="CenterData" type="com.cloud.gds.cleaning.api.vo.CenterData">
		<result column="field_value" property="fieldValue"/>
		<result column="base_id" property="id"/>
		<!--<result column="field_id" property="fieldId"/>-->
		<result column="is_manual" property="isManual"/>
		<result column="count" property="count"/>
	</resultMap>

	<sql id="DataPoolAnalysis">
		a.id,
		b.similarity,
		a.field_id,
		a.field_value,
		a.create_time,
		a.modified_time,
		a.create_user,
		a.modified_user,
		a.is_deleted,
		a.state,
		a.be_cleaned_id
	</sql>

	<select id="gainCleanData" parameterType="java.lang.Long" resultMap="CenterData">
		SELECT
			tab1.*,
			tab2.field_value
		FROM
			(SELECT base_id, is_manual, COUNT(base_id) AS count
			 FROM
				 dataclean_analysis_result
			 WHERE field_id = #{fieldId}
			 GROUP BY base_id) tab1
				LEFT JOIN dataclean_data_field_value tab2
				ON tab1.base_id = tab2.id
		WHERE tab2.is_deleted = 0
		ORDER BY count DESC
	</select>

	<select id="gainDetails" parameterType="java.lang.Long" resultMap="dataFieldValueMap">
		SELECT *
		FROM
			dataclean_data_field_value
		WHERE id IN
		      (SELECT compare_id
		       FROM
			       dataclean_analysis_result
		       WHERE base_id = #{id} AND is_deleted = 0)
	</select>

	<select id="selectDataPool" resultType="com.cloud.gds.cleaning.api.dto.DataPoolAnalysis">
		SELECT
		<include refid="DataPoolAnalysis"/>
		FROM
		(
		SELECT
		compare_id,
		similarity
		FROM
		dataclean_analysis_result
		WHERE
		base_id = #{id}
		) b
		LEFT JOIN dataclean_data_field_value a ON b.compare_id = a.id
		WHERE
		a.is_deleted = 0
	</select>

	<select id="centerFiltration" resultType="com.cloud.gds.cleaning.api.dto.DataPoolAnalysis">
		SELECT
		<include refid="DataPoolAnalysis"/>
		FROM
		(
		SELECT
		compare_id,
		similarity
		FROM
		dataclean_analysis_result
		WHERE
		base_id = #{centerId} AND similarity &gt; #{screenSize}
		) b
		LEFT JOIN dataclean_data_field_value a ON b.compare_id = a.id
		WHERE
		a.is_deleted = 0
	</select>

	<!-- api数据量较大时添加(此方法只添加value、userId、fieldId三个字段，是否在后期中是否在新增的时候加入更新用户的信息,时间以数据中时间戳自动化填写) -->
	<insert id="insertAll">
		insert into dataclean_data_field_value (field_id,field_value,create_user) values
		<foreach collection="valueList" item="fieldValue" separator=",">
			(#{fieldValue.fieldId},#{fieldValue.fieldValue},#{fieldValue.createUser})
		</foreach>
	</insert>

	<!-- 自动化清洗大数据更新处理 -->
	<update id="updateBatchById">
		update dataclean_data_field_value set
		be_cleaned_id  = case id
		<foreach collection="valueList" item="fieldValue">
			when #{fieldValue.id} then #{fieldValue.beCleanedId}
		</foreach>
		end ,
		is_deleted = case id
		<foreach collection="valueList" item="fieldValue">
			when #{fieldValue.id} then #{fieldValue.isDeleted}
		</foreach>
		end ,
		modified_user = case id
		<foreach collection="valueList" item="fieldValue">
			when #{fieldValue.id} then #{fieldValue.modifiedUser}
		</foreach>
		end ,
		modified_time = case id
		<foreach collection="valueList" item="fieldValue">
			when #{fieldValue.id} then #{fieldValue.modifiedTime}
		</foreach>
		end
		where id in (
		<foreach collection="valueList" item="fieldValue" separator=",">
		   #{fieldValue.id}
		</foreach>
		)
	</update>


	<update id="reductionById">
		update dataclean_data_field_value
		set
		modified_time = now(),
		is_deleted = 0,
		modified_user = #{userId}
		where
		id = #{id}
	</update>

	<update id="reductionByIds">
		update dataclean_data_field_value
		set
		modified_time = now(),
		is_deleted = 0,
		modified_user = #{userId}
		where
		id in
		<foreach item="id" collection="ids" open="("
				 separator="," close=")">
			#{id}
		</foreach>

	</update>

	<update id="oneKeyReduction">
		update dataclean_data_field_value
		set
		modified_time = now(),
		is_deleted = 0,
		modified_user = #{userId},
		be_cleaned_id = 0
		where is_deleted = 1
		and field_id = #{fieldId}
	</update>

	<delete id="recyclingBinClear">
		DELETE
		FROM
		dataclean_data_field_value
		WHERE
		is_deleted = 1
		AND id IN
		<foreach item="id" collection="ids" open="("
				 separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>
